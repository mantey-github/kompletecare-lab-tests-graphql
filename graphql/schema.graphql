type Query {
    "Get logged in patient information."
    patient: User @auth

    "List all laboratory tests grouped by type."
    labTestGroups: [LabTestGroup!]! @guard
}

type Mutation {
    login(input: LoginInput @spread): AccessToken! @field(resolver: "App\\GraphQL\\Mutations\\AuthMutation@login")

    updateMedicalRecord(input: MedicalRecordInput! @spread): MedicalRecord @guard
}

type AccessToken {
  token: String!
}

type User {
    id: ID!
    name: String!
    email: String!
    medicalRecord: MedicalRecord @hasOne
}

type LabTest {
    id: ID!
    type: String!
    name: String!
    description: String!
}

type MedicalRecord {
  id: ID!
  labs: LabsRecord
  patient: User! @belongsTo
}

type LabsRecord {
  xRayScan: [String!]
  ultrasoundScan: [String!]
  ctScan: String
  mriScan: String
}

type LabTestGroup {
    type: String!
    tests: [LabTest!]!
}

input LoginInput {
  email: String! @rules(apply: ["email"])
  password: String!
}

input MedicalRecordInput {
  labs: LabsRecordInput!
}

input LabsRecordInput {
  xRayScan: [String!]
  ultrasoundScan: [String!]
  ctScan: String
  mriScan: String
}
